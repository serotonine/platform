# PHP CodeSniffer configuration
# -----------------------------
## ALLGOOD

# The file extensions to test.
# Delimited by space, comma or semicolon.
phpcs.extensions = php inc module install info test profile theme css js

# The default configuration file to generate.
phpcs.config = ${project.basedir}/phpcs.xml

# The locations for installed standards, delimited by comma.
phpcs.installed.paths = ${ssk.vendor}/ec-europa/qa-automation/phpcs/SubStandards

# The coding standards to enforce.
# Delimited by space, comma or semicolon..
phpcs.standards = Subsite;${project.basedir}/phpcs-ruleset.xml

# Paths to check, delimited by semicolons.
phpcs.files = ${project.resources.dir};${project.resources.lib.dir};${phing.subsite.src.dir};${behat.src.dir}

# Paths to ignore, delimited by semicolons.
phpcs.ignore =

# Returns a 0 error code when only warnings are found if enabled. Ment for CI.
phpcs.passwarnings = 0

# The report format. For example 'full', 'summary', 'diff', 'xml', 'json'.
# Delimited by space, comma or semicolon.
phpcs.reports = summary

# Whether or not to show sniff codes in the report.
phpcs.sniffcodes = 0

# Whether or not to show the progress of the run.
phpcs.progress = 1

# The location of the file containing the global configuration options.
phpcs.global.config = ${ssk.vendor}/squizlabs/php_codesniffer/CodeSniffer.conf

# Whether or not to run a coding standards check before doing a git push. Note
# that this will abort the push if the coding standards check fails.
phpcs.prepush.enable = 1

# The source and destination paths of the git pre-push hook.
phpcs.prepush.source = ${ssk.vendor}/pfrenssen/phpcs-pre-push/pre-push
phpcs.prepush.destination = ${project.basedir}/resources/git/hooks/pre-push/phpcs

